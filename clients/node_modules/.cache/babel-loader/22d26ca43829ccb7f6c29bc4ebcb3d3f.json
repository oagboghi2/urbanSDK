{"ast":null,"code":"var _jsxFileName = \"/Users/oboagboghidi/Desktop/projects/urbansdk_test/clients/src/Pages/Dashboard/TroopDashboard.js\";\nimport React, { Component } from \"react\";\nimport Reactotron from 'reactotron-react-js';\nimport TempChart from '../../components/chartList.js/tempChart.js';\n\nclass TroopDashboard extends Component {\n  // state={weatherArray : []}\n  // chartList = () => {\n  //     let chartValues = this.props.weatherData.map((cv) => cv.temperature)\n  //     Reactotron.log(\"cv\", chartValues)\n  //     this.setState({ weatherArray : chartValues }) ;\n  //   }\n  render() {\n    Reactotron.log(\"this.state.troops\", this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Testing Dashboard component 1\", React.createElement(TempChart, {\n      chartValues: this.props.chartValues,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TroopDashboard;","map":{"version":3,"sources":["/Users/oboagboghidi/Desktop/projects/urbansdk_test/clients/src/Pages/Dashboard/TroopDashboard.js"],"names":["React","Component","Reactotron","TempChart","TroopDashboard","render","log","state","props","chartValues"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,SAAP,MAAsB,4CAAtB;;AAEA,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AACnC;AAEA;AACA;AACA;AACA;AACA;AACAI,EAAAA,MAAM,GAAE;AACJH,IAAAA,UAAU,CAACI,GAAX,CAAe,mBAAf,EAAoC,KAAKC,KAAzC;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAEI,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAE,KAAKC,KAAL,CAAWC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAhBkC;;AAmBvC,eAAeL,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Reactotron from 'reactotron-react-js';\nimport TempChart from '../../components/chartList.js/tempChart.js';\n\nclass TroopDashboard extends Component {\n    // state={weatherArray : []}\n\n    // chartList = () => {\n    //     let chartValues = this.props.weatherData.map((cv) => cv.temperature)\n    //     Reactotron.log(\"cv\", chartValues)\n    //     this.setState({ weatherArray : chartValues }) ;\n    //   }\n    render(){\n        Reactotron.log(\"this.state.troops\", this.state)\n        return(\n            <div>\n                Testing Dashboard component 1\n                <TempChart chartValues={this.props.chartValues}/>\n            </div>\n        )\n    }\n}\n\nexport default TroopDashboard;\n"]},"metadata":{},"sourceType":"module"}