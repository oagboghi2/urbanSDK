{"ast":null,"code":"var _jsxFileName = \"/Users/oboagboghidi/Desktop/projects/urbansdk_test/clients/src/App.js\";\nimport React, { Component } from 'react';\nimport Reactotron from 'reactotron-react-js';\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport ShiftDetails from './Pages/Shift_Details/ShiftDetails.js';\nimport TroopDashboard from './Pages/Dashboard/TroopDashboard.js';\nimport * as moment from 'moment';\nimport axios from 'axios';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      forecastPeriods: [],\n      chartValues: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"component mounted\");\n    this.fetchTableData();\n  }\n\n  async fetchTableData() {\n    const response = await axios.get('https://api.weather.gov/points/30.3322,-81.6557', {\n      headers: {}\n    });\n    const forecast = await axios.get(response.data.properties.forecast); // Reactotron.log(\"forecast\", forecast);\n    // console.log(\"response\", response);\n\n    let labelValues = forecast.data.properties.periods.map(date => moment(date.startTime).format('DD'));\n    let chartValues = forecast.data.properties.periods.map(cv => cv.temperature);\n    this.setState({\n      forecastPeriods: forecast.data.properties.periods,\n      chartValues\n    });\n  }\n\n  render() {\n    Reactotron.log('this.state App.js', this.state);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(TroopDashboard, {\n      chartValues: this.state.chartValues,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(ShiftDetails, {\n      weatherData: this.state.forecastPeriods,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/oboagboghidi/Desktop/projects/urbansdk_test/clients/src/App.js"],"names":["React","Component","Reactotron","BrowserRouter","Switch","Route","Link","ShiftDetails","TroopDashboard","moment","axios","App","state","forecastPeriods","chartValues","componentDidMount","console","log","fetchTableData","response","get","headers","forecast","data","properties","labelValues","periods","map","date","startTime","format","cv","temperature","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SACEC,aADF,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,QAKO,kBALP;AAMA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBV,SAAlB,CAA2B;AAAA;AAAA;AAAA,SACzBW,KADyB,GACjB;AACNC,MAAAA,eAAe,EAAE,EADX;AAENC,MAAAA,WAAW,EAAG;AAFR,KADiB;AAAA;;AAMzBC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,SAAKC,cAAL;AACD;;AAED,QAAMA,cAAN,GAAuB;AACrB,UAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,iDAAV,EAA6D;AAClFC,MAAAA,OAAO,EAAE;AADyE,KAA7D,CAAvB;AAGA,UAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACU,GAAN,CAAUD,QAAQ,CAACI,IAAT,CAAcC,UAAd,CAAyBF,QAAnC,CAAvB,CAJqB,CAKvB;AACA;;AACA,QAAIG,WAAW,GAAGH,QAAQ,CAACC,IAAT,CAAcC,UAAd,CAAyBE,OAAzB,CAAiCC,GAAjC,CAAsCC,IAAD,IAAUnB,MAAM,CAACmB,IAAI,CAACC,SAAN,CAAN,CAAuBC,MAAvB,CAA8B,IAA9B,CAA/C,CAAlB;AACA,QAAIhB,WAAW,GAAGQ,QAAQ,CAACC,IAAT,CAAcC,UAAd,CAAyBE,OAAzB,CAAiCC,GAAjC,CAAsCI,EAAD,IAAQA,EAAE,CAACC,WAAhD,CAAlB;AACA,SAAKC,QAAL,CAAc;AAAEpB,MAAAA,eAAe,EAAGS,QAAQ,CAACC,IAAT,CAAcC,UAAd,CAAyBE,OAA7C;AAAsDZ,MAAAA;AAAtD,KAAd;AACC;;AAIDoB,EAAAA,MAAM,GAAE;AACNhC,IAAAA,UAAU,CAACe,GAAX,CAAe,mBAAf,EAAoC,KAAKL,KAAzC;AACA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,EAYQ,oBAAC,cAAD;AAAgB,MAAA,WAAW,EAAE,KAAKA,KAAL,CAAWE,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZR,EAaQ,oBAAC,YAAD;AAAc,MAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbR,CADF,CADF;AAoBD;;AA/CwB;;AAmD3B,eAAeF,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Reactotron from 'reactotron-react-js';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport ShiftDetails from './Pages/Shift_Details/ShiftDetails.js';\nimport TroopDashboard from './Pages/Dashboard/TroopDashboard.js';\nimport * as moment from 'moment'\nimport axios from 'axios';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component{\n  state = {\n    forecastPeriods: [], \n    chartValues : []\n  };\n\n  componentDidMount(){\n    console.log(\"component mounted\");\n    this.fetchTableData();\n  }\n\n  async fetchTableData() {\n    const response = await axios.get('https://api.weather.gov/points/30.3322,-81.6557', {\n      headers: {}\n    })\n    const forecast = await axios.get(response.data.properties.forecast)\n  // Reactotron.log(\"forecast\", forecast);\n  // console.log(\"response\", response);\n  let labelValues = forecast.data.properties.periods.map((date) => moment(date.startTime).format('DD'))\n  let chartValues = forecast.data.properties.periods.map((cv) => cv.temperature)\n  this.setState({ forecastPeriods : forecast.data.properties.periods, chartValues })\n  }\n\n  \n\n  render(){\n    Reactotron.log('this.state App.js', this.state)\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n            {/* <div>\n              <ul>\n                <li>\n                  <Link to=\"ShiftDetails\">Shift Details</Link>\n                </li>\n                <li>\n                  <Link to=\"Dashboard\">Dashboard</Link>\n                </li>\n              </ul>\n            </div> */}\n            <hr />\n                <TroopDashboard chartValues={this.state.chartValues}/>\n                <ShiftDetails weatherData={this.state.forecastPeriods} />\n                \n        </header>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}