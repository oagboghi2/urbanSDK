{"ast":null,"code":"var _jsxFileName = \"/Users/oboagboghidi/Desktop/projects/urbansdk_test/clients/src/App.js\";\nimport React, { Component } from 'react';\nimport Reactotron from 'reactotron-react-js';\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport ShiftDetails from './Pages/Shift_Details/ShiftDetails.js';\nimport TroopDashboard from './Pages/Dashboard/TroopDashboard.js';\nimport axios from 'axios';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      forecastPeriods: []\n    };\n\n    this.chartList = () => {\n      let chartValues = this.state.forecastPeriods.temperature.map((cv, i) => cv.temperature);\n      console.log(\"cv\", chartValues);\n      return chartValues;\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"component mounted\");\n    this.fetchTableData();\n  }\n\n  async fetchTableData() {\n    const response = await axios.get('https://api.weather.gov/points/30.3322,-81.6557', {\n      headers: {}\n    });\n    const forecast = await axios.get(response.data.properties.forecast); // Reactotron.log(\"forecast\", forecast);\n    // console.log(\"response\", response);\n\n    this.setState({\n      forecastPeriods: forecast.data.properties.periods\n    });\n  }\n\n  render() {\n    Reactotron.log('this.state', this.state);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"ShiftDetails\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Shift Details\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"Dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Dashboard\")))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/shiftDetails\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(ShiftDetails, {\n      weatherData: this.state.forecastPeriods,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(TroopDashboard, {\n      weatherData: this.state.forecastPeriods,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/oboagboghidi/Desktop/projects/urbansdk_test/clients/src/App.js"],"names":["React","Component","Reactotron","BrowserRouter","Switch","Route","Link","ShiftDetails","TroopDashboard","axios","App","state","forecastPeriods","chartList","chartValues","temperature","map","cv","i","console","log","componentDidMount","fetchTableData","response","get","headers","forecast","data","properties","setState","periods","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Reactotron from 'reactotron-react-js';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport ShiftDetails from './Pages/Shift_Details/ShiftDetails.js';\nimport TroopDashboard from './Pages/Dashboard/TroopDashboard.js';\nimport axios from 'axios';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component{\n  state = {\n    forecastPeriods: []\n  };\n\n  componentDidMount(){\n    console.log(\"component mounted\");\n    this.fetchTableData();\n  }\n\n  async fetchTableData() {\n    const response = await axios.get('https://api.weather.gov/points/30.3322,-81.6557', {\n      headers: {}\n    })\n    const forecast = await axios.get(response.data.properties.forecast)\n  // Reactotron.log(\"forecast\", forecast);\n  // console.log(\"response\", response);\n  this.setState({ forecastPeriods : forecast.data.properties.periods })\n  }\n\n  chartList = () => {\n    let chartValues = this.state.forecastPeriods.temperature.map((cv, i) => cv.temperature)\n    console.log(\"cv\", chartValues)\n    return chartValues;\n  }\n\n  render(){\n    Reactotron.log('this.state', this.state)\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <BrowserRouter>\n            <div>\n              <ul>\n                <li>\n                  <Link to=\"ShiftDetails\">Shift Details</Link>\n                </li>\n                <li>\n                  <Link to=\"Dashboard\">Dashboard</Link>\n                </li>\n              </ul>\n            </div>\n            <hr />\n            <Switch>\n              <Route exact path=\"/shiftDetails\">\n                <ShiftDetails weatherData={this.state.forecastPeriods} />\n              </Route>\n              <Route exact path=\"/dashboard\">\n                <TroopDashboard weatherData={this.state.forecastPeriods}/>\n              </Route>\n            </Switch>\n          </BrowserRouter>\n        </header>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}