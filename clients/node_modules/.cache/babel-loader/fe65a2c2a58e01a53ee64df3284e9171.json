{"ast":null,"code":"var _jsxFileName = \"/Users/oboagboghidi/Desktop/projects/urbansdk_test/clients/src/components/chartList.js/tempChart.js\";\nimport React, { Component } from 'react';\nimport Reactotron from 'reactotron-react-js';\nimport Chart from \"chart.js\";\nimport './tempChart.css';\n\nclass TempChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.chartRef = React.createRef();\n\n    this.generateChart = () => {\n      const myChartRef = this.chartRef.current.getContext(\"2d\");\n      Reactotron.log(\"tempChart values\", this.props.weatherData);\n      new Chart(myChartRef, {\n        type: \"line\",\n        data: {\n          datasets: [{\n            label: \"Weather\",\n            data: [3910, 3706, 2850, 4005, 3750, 2912, 3645, 3211, 3354, 8904]\n          }]\n        }\n      });\n    };\n  }\n\n  render() {\n    let values = Object.values(this.props.weatherData);\n    Reactotron.log(\"tempChart Object props\", Object.values(this.props.weatherData));\n    Reactotron.log(\"tempChart props\", [1, 2, 3, 4, 5]);\n    return React.createElement(\"div\", {\n      className: \"graphContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.generateChart(), React.createElement(\"canvas\", {\n      id: \"myChart\",\n      ref: this.chartRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TempChart;","map":{"version":3,"sources":["/Users/oboagboghidi/Desktop/projects/urbansdk_test/clients/src/components/chartList.js/tempChart.js"],"names":["React","Component","Reactotron","Chart","TempChart","chartRef","createRef","generateChart","myChartRef","current","getContext","log","props","weatherData","type","data","datasets","label","render","values","Object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BI,QAD8B,GACnBL,KAAK,CAACM,SAAN,EADmB;;AAAA,SAG9BC,aAH8B,GAGd,MAAK;AACjB,YAAMC,UAAU,GAAG,KAAKH,QAAL,CAAcI,OAAd,CAAsBC,UAAtB,CAAiC,IAAjC,CAAnB;AAEAR,MAAAA,UAAU,CAACS,GAAX,CAAe,kBAAf,EAAmC,KAAKC,KAAL,CAAWC,WAA9C;AACA,UAAIV,KAAJ,CAAUK,UAAV,EAAsB;AAClBM,QAAAA,IAAI,EAAE,MADY;AAElBC,QAAAA,IAAI,EAAE;AAEFC,UAAAA,QAAQ,EAAE,CACN;AAACC,YAAAA,KAAK,EAAE,SAAR;AAAmBF,YAAAA,IAAI,EAAC,CACpB,IADoB,EACd,IADc,EACR,IADQ,EACF,IADE,EACI,IADJ,EACU,IADV,EACgB,IADhB,EACsB,IADtB,EAC4B,IAD5B,EACkC,IADlC;AAAxB,WADM;AAFR;AAFY,OAAtB;AAWH,KAlB6B;AAAA;;AAuB9BG,EAAAA,MAAM,GAAE;AACJ,QAAIC,MAAM,GAAGC,MAAM,CAACD,MAAP,CAAc,KAAKP,KAAL,CAAWC,WAAzB,CAAb;AACAX,IAAAA,UAAU,CAACS,GAAX,CAAe,wBAAf,EAAyCS,MAAM,CAACD,MAAP,CAAc,KAAKP,KAAL,CAAWC,WAAzB,CAAzC;AACAX,IAAAA,UAAU,CAACS,GAAX,CAAe,iBAAf,EAAkC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAAlC;AACA,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKJ,aAAL,EADL,EAEI;AACI,MAAA,EAAE,EAAC,SADP;AAEI,MAAA,GAAG,EAAE,KAAKF,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AASH;;AApC6B;;AAuClC,eAAeD,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport Reactotron from 'reactotron-react-js';\nimport Chart from \"chart.js\";\nimport './tempChart.css'\n\nclass TempChart extends Component {\n    chartRef = React.createRef();\n\n    generateChart = () =>{\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\n        \n        Reactotron.log(\"tempChart values\", this.props.weatherData);\n        new Chart(myChartRef, {\n            type: \"line\",\n            data: {\n                \n                datasets: [\n                    {label: \"Weather\", data:[\n                        3910, 3706, 2850, 4005, 3750, 2912, 3645, 3211, 3354, 8904\n                    ]}\n                ]\n            }\n        })\n    }\n\n   \n\n\n    render(){\n        let values = Object.values(this.props.weatherData)\n        Reactotron.log(\"tempChart Object props\", Object.values(this.props.weatherData));\n        Reactotron.log(\"tempChart props\", [1,2,3,4,5])\n        return (\n            <div className=\"graphContainer\">\n                {this.generateChart()}\n                <canvas\n                    id=\"myChart\"\n                    ref={this.chartRef}\n                />\n            </div>\n        )\n    }\n}\n\nexport default TempChart"]},"metadata":{},"sourceType":"module"}